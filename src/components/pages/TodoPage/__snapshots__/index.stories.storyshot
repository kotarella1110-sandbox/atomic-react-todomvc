// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FileProperties Page|TodoPage default 1`] = `
.c7 {
  position: relative;
  margin: 0;
  width: 100%;
  font-size: 24px;
  font-family: inherit;
  font-weight: inherit;
  line-height: 1.4em;
  border: 0;
  color: inherit;
  padding: 6px;
  border: 1px solid #999;
  box-shadow: inset 0 -1px 5px 0 rgba(0,0,0,0.2);
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  padding: 16px 16px 16px 60px;
  border: 0;
  background: rgba(0,0,0,0.003);
  box-shadow: inset 0 -2px 1px rgba(0,0,0,0.03);
}

.c10 {
  color: #777;
  padding: 10px 15px;
  height: 20px;
  text-align: center;
  border-top: 1px solid #e6e6e6;
}

.c10:before {
  content: '';
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  height: 50px;
  overflow: hidden;
  box-shadow: 0 1px 1px rgba(0,0,0,0.2),0 8px 0 -3px #f6f6f6,0 9px 1px -3px rgba(0,0,0,0.2),0 16px 0 -6px #f6f6f6,0 17px 2px -6px rgba(0,0,0,0.2);
}

.c11 {
  float: left;
  text-align: left;
}

.c12 {
  font-weight: 300;
}

.c13 {
  margin: 0;
  padding: 0;
  list-style: none;
  position: absolute;
  right: 0;
  left: 0;
}

.c14 {
  display: inline;
}

.c15 {
  color: inherit;
  margin: 3px;
  padding: 3px 7px;
  -webkit-text-decoration: none;
  text-decoration: none;
  border: 1px solid transparent;
  border-radius: 3px;
  border-color: rgba(175,47,47,0.2);
}

.c15:hover {
  border-color: rgba(175,47,47,0.1);
}

.c16 {
  color: inherit;
  margin: 3px;
  padding: 3px 7px;
  -webkit-text-decoration: none;
  text-decoration: none;
  border: 1px solid transparent;
  border-radius: 3px;
}

.c16:hover {
  border-color: rgba(175,47,47,0.1);
}

.c3 .c6::-webkit-input-placeholder {
  font-style: italic;
  font-weight: 300;
  color: #e6e6e6;
}

.c3 .c6::-moz-placeholder {
  font-style: italic;
  font-weight: 300;
  color: #e6e6e6;
}

.c3 .c6::input-placeholder {
  font-style: italic;
  font-weight: 300;
  color: #e6e6e6;
}

.c4 {
  text-align: center;
  border: 0;
  opacity: 0;
  position: absolute;
}

.c4 + .c5 {
  width: 60px;
  height: 34px;
  font-size: 0;
  position: absolute;
  top: 14px;
  left: -13px;
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
  z-index: 3;
}

.c4 + .c5:before {
  content: '‚ùØ';
  font-size: 22px;
  color: #e6e6e6;
  padding: 10px 27px 10px 27px;
}

.c4:checked + .c5:before {
  color: #737373;
}

.c8 {
  position: relative;
  border-top: 1px solid #e6e6e6;
}

.c9 {
  margin: 0;
  padding: 0;
  list-style: none;
}

.c2 {
  font-size: 100px;
  font-weight: 100;
  color: rgba(175,47,47,0.15);
  -webkit-text-rendering: optimizeLegibility;
  -moz-text-rendering: optimizeLegibility;
  text-rendering: optimizeLegibility;
}

.c0 {
  background: #fff;
  margin: 130px 0 40px 0;
  position: relative;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 25px 50px 0 rgba(0,0,0,0.1);
}

.c0 .c1 {
  position: absolute;
  top: -155px;
  width: 100%;
  text-align: center;
}

@media (max-width:430px) {
  .c10 {
    height: 50px;
  }
}

@media (max-width:430px) {
  .c13 {
    bottom: 10px;
  }
}

@media screen and (-webkit-min-device-pixel-ratio:0) {
  .c4 {
    background: none;
  }
}

<div
  className="c0"
>
  <h1
    className="c1 c2"
  >
    todos
  </h1>
  <header
    className=""
  >
    <div
      className="c3"
    >
      <input
        className="c4"
        id="toggle-all"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        className="c5 "
        htmlFor="toggle-all"
      />
      <input
        autoFocus={true}
        className="c6 c7"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyDown={[Function]}
        placeholder="What needs to be done?"
        type="text"
        value=""
      />
    </div>
  </header>
  <main
    className=""
  >
    <div
      className="c8"
    >
      <ul
        className="c9"
      />
    </div>
  </main>
  <footer
    className=""
  >
    <div
      className="c10"
    >
      <span
        className="c11"
      >
        <strong
          className="c12"
        >
          No
        </strong>
         
        items
         left
      </span>
      <ul
        className="c13"
      >
        <li
          className="c14"
        >
          <a
            className="c15"
            onClick={[Function]}
            selected={true}
          >
            All
          </a>
        </li>
        <li
          className="c14"
        >
          <a
            className="c16"
            onClick={[Function]}
            selected={false}
          >
            Active
          </a>
        </li>
        <li
          className="c14"
        >
          <a
            className="c16"
            onClick={[Function]}
            selected={false}
          >
            Completed
          </a>
        </li>
      </ul>
    </div>
  </footer>
</div>
`;
